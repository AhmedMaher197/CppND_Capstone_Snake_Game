@startuml
start
if (SDL_PollEvent() == SDL_QUIT) then
    :return false;
    stop
endif 
package RoutePlanner::run {
    :Calculate manahttan-distance from current position to food;
    :clear list of old neighbours;
    repeat 
        :calculate position of candidate ;
        :verify candidate;
        if (candidate == valid) then
            :add to list of neighbours;
        endif
        :sort list of neighbours with lowest distance at first;
        note left
            every 4 directions (top, bottom, left, right)
            are checked if there is a possible neighbour 
            are available
            If the field is already occupied by a snake 
            this neighbour would be invalid
        end note
    repeat while (all 4 directions are checked)
    package GetProbableWinner {
        repeat
            :check if moving to neighbour would be ok;
            
            note left
                The snake should not move
                in the contrary direction 
                to avoid to eat itself ;)
            end note
        repeat while ( (any neighbours available?) || (moving to neighbour would be ok?) )
    }
}
:return true;
stop
@enduml